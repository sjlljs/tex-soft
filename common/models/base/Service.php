<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace common\models\base;

use Yii;

/**
 * This is the base-model class for table "service".
 *
 * @property integer $id
 * @property string $name
 * @property integer $category_id
 * @property string $base_cost
 * @property string $barcode
 * @property string $unit
 * @property integer $time
 * @property integer $ticket
 * @property string $hint
 * @property integer $num
 * @property integer $fixed
 * @property integer $margin
 * @property integer $discount
 * @property string $payment
 * @property string $comment
 * @property integer $deleted
 *
 * @property \common\models\ServiceCategory $category
 * @property string $aliasModel
 */
abstract class Service extends \yii\db\ActiveRecord
{



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'service';
    }


    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['category_id', 'base_cost', 'time', 'ticket', 'num', 'fixed', 'margin', 'discount', 'payment', 'deleted'], 'integer'],
            [['comment'], 'string'],
            [['name'], 'string', 'max' => 250],
            [['barcode'], 'string', 'max' => 50],
            [['unit'], 'string', 'max' => 10],
            [['hint'], 'string', 'max' => 30],
            [['category_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\ServiceCategory::className(), 'targetAttribute' => ['category_id' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'name' => 'название',
            'category_id' => 'id категории',
            'base_cost' => 'базовая цена',
            'barcode' => 'штрих-код',
            'unit' => 'единицы измерения',
            'time' => 'время исполнения',
            'ticket' => 'тип квитанции-предупр.о последствиях',
            'hint' => 'подсказка',
            'num' => 'порядок',
            'fixed' => 'зафиксировать цену',
            'margin' => 'делать наценку',
            'discount' => 'давать ли скидку',
            'payment' => 'зарплата мастеру',
            'comment' => 'комментарий приемщику',
            'deleted' => 'удален',
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCategory()
    {
        return $this->hasOne(\common\models\ServiceCategory::className(), ['id' => 'category_id']);
    }


    
    /**
     * @inheritdoc
     * @return \common\models\query\ServiceQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new \common\models\query\ServiceQuery(get_called_class());
    }


}
